`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 14.09.2025 15:15:57
// Design Name: 
// Module Name: Assignment3
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Assignment3(input CLOCK,input [2:0] sw,input [4:0] pb,
                    output reg [12:0] led=0,output reg [7:0] seg=8'b11111111, output reg [3:0] an=4'b1111, output reg ld15=0);
    reg [26:0] counter=0;
    reg [3:0] step=0;
    wire [2:0] LED;
    switch swit(CLOCK,sw[2:0],LED[2:0]);
    wire [7:0] SEG; wire [3:0] AN; wire LD15;
    sub2 subtaskb (CLOCK,pb,SEG,AN,LD15);
    always @ (posedge CLOCK) begin
        counter <= (counter==54000000) ? 0 : counter+1;
        if(step<13) begin
            if(counter==0) begin
                led <= led<<1|1'b1;
                step<=step+1;    
            end
        end else begin
            led[2:0]<=LED;
            seg[7:0]<=SEG;
            an[3:0]<=AN;
            ld15<=LD15;
        end
    end
    
endmodule

module sub2(input CLOCK,input [4:0] pb,output reg [7:0] seg=8'b11100011,output reg [3:0] an=4'b1110,output reg ld15=0);
    reg [2:0] step=0;
    always @ (posedge CLOCK) begin//C L D R U
        case (step)
            0:if(pb[0]==1) begin
                seg<=8'b10100001;//d
                an<=4'b1101;
                step<=1;
            end
            1:if(pb[2]==1) begin
                seg<=8'b11001111;//l
                an<=4'b1011;
                step<=2;
            end
            2:if(pb[3]==1) begin
                seg<=8'b10101111;//r
                an<=4'b0111;
                step<=3;
            end
            3:if(pb[1]==1) begin
                seg<=8'b11001111;//l
                an<=4'b1011;
                step<=4;
            end
            4:if(pb[3]==1) begin
                seg<=8'b11100011;//u
                an<=4'b1110;
                step<=4;
                ld15<=1;
            end
        endcase
    end
endmodule

module switch(input CLOCK,input [2:0] sw,output reg [2:0] LED);
    wire led100,led10,led1;
    Blinky_1Hz dut1 (CLOCK,led1);
    Blinky_10Hz dut10 (CLOCK,led10);
    Blinky_100Hz dut100 (CLOCK,led100);
    always @ (sw[2:0]) begin
        if (sw[2]==1)
            LED[2:0]={led100,1'b1,1'b1};
        else if (sw[1]==1)
            LED[2:0]={1'b1,led10,1'b1};
        else if (sw[0]==1)
            LED[2:0]={1'b1,1'b1,led1};
        else
            LED[2:0]=3'b111;
    end
endmodule

module Blinky_100Hz (input CLOCK,output LED);
    reg [26:0] COUNT = 0;
    reg CLOCK_1=0;
    always @ (posedge CLOCK) begin
        COUNT = (COUNT==500000)?0:COUNT+1;
        CLOCK_1 = (COUNT==0)?~CLOCK_1:CLOCK_1;
    end
    assign LED = CLOCK_1;
endmodule

module Blinky_10Hz (input CLOCK,output LED);
    reg [26:0] COUNT = 0;
    reg CLOCK_1=0;
    always @ (posedge CLOCK) begin
        COUNT = (COUNT==5000000)?0:COUNT+1;
        CLOCK_1 = (COUNT==0)?~CLOCK_1:CLOCK_1;
    end
    assign LED = CLOCK_1;
endmodule

module Blinky_1Hz (input CLOCK,output LED);
    reg [26:0] COUNT = 0;
    reg CLOCK_1=0;
    always @ (posedge CLOCK) begin
        COUNT = (COUNT==50000000)?0:COUNT+1;
        CLOCK_1 = (COUNT==0)?~CLOCK_1:CLOCK_1;
    end
    assign LED = CLOCK_1;
endmodule
